/*
 * MainFrame.java
 *
 * Created on May 23, 2011, 4:42:01 PM
 */
package gui;

import java.io.File;
import java.io.FileNotFoundException;

import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

import core.FileHandler;
import core.Map;
import core.MapEditor;
import core.MapListener;
import core.MapLoader;
import core.NotAMapFileException;
import core.Option;
import core.OptionsHolder;
import core.OptionsLoader;

/**
 *
 * @author sigurd
 */
public class MainFrame extends javax.swing.JFrame implements MapListener {

	private MapEditor editor;
	private Map map;
	private MapLoader mapLoader = new MapLoader();
	private OptionsLoader optionsLoader = new OptionsLoader();
	private OptionsHolder options;


	/** Creates new form MainFrame */
	public MainFrame(MapEditor editor) {
		super("MapEditor");
		this.editor = editor;
		this.map = editor.getMap();
		
		
		setLookAndFeel();
		initComponents();
		initOptionsBox();
		initOptionsComboBox();

		setVisible(true);
		
		levelTextPanel.setMapeditor(editor);

		map.addMapEditorListener(this);
		setIconImage(FileHandler.getImage("icon.png"));
	}

	private void setLookAndFeel() {
		try {
			UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
			if ("GTK look and feel".equals(UIManager.getLookAndFeel().getName())) {
				UIManager.put("FileChooserUI", "eu.kostia.gtkjfilechooser.ui.GtkFileChooserUI");
			}
		} catch (Exception e) {
			System.out.println("MainFrame.MainFrame(): Couldn't set system Look and Feel");
			e.printStackTrace();
		}
	}

	private void initOptionsBox() {

		options = editor.getOptions();
		final Object[] optionArray = options.toArray();

		listOptions.setListData(optionArray);


		listOptions.addListSelectionListener(new ListSelectionListener() {

			@Override
			public void valueChanged(ListSelectionEvent e) {
				updateCurrentValue();
			}
		});


	}

	public void updateCurrentValue() {
		if (listOptions.getSelectedValue() != null) {
			map.setSelectedOptionValue(
					((Option) listOptions.getSelectedValue()).getValue());
		} else {
			map.setSelectedOptionValue(
					editor.getOptions().get(0).getValue());
		}
	}

	public void setOpenFile(File file) {
		if (file != null) {
			setTitle("MapEditor - " + file.getName());
		}
	}

	@Override
	public void mapChanged(Map map, String property) {
		if (property.equals("preferences")) {
			initOptionsBox();
//			updateCurrentValue();
		}
	}

	public void initOptionsComboBox() {
//		comboBoxOptionsChooser.removeAllItems();


//		for (OptionsHolder options : optionsFolder) {
		for (int i = 0; i < editor.getOptionsFolder().size(); i++) {
			OptionsHolder options = editor.getOptionsFolder().get(i);
			comboBoxOptionsChooser.addItem(options);
		}

		updateCurrentValue();

	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mapPanel = new gui.MapPanel(); mapPanel.init(editor, this);
        levelTextPanel = new gui.LevelTextPanel();
        buttonClear = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listOptions = new javax.swing.JList();
        comboBoxOptionsChooser = new javax.swing.JComboBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menuNewMap = new javax.swing.JMenuItem();
        menuOpen = new javax.swing.JMenuItem();
        menuSave = new javax.swing.JMenuItem();
        menuSaveAs = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout mapPanelLayout = new javax.swing.GroupLayout(mapPanel);
        mapPanel.setLayout(mapPanelLayout);
        mapPanelLayout.setHorizontalGroup(
            mapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 463, Short.MAX_VALUE)
        );
        mapPanelLayout.setVerticalGroup(
            mapPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 347, Short.MAX_VALUE)
        );

        buttonClear.setText("Clear");
        buttonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonClearActionPerformed(evt);
            }
        });

        listOptions.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5", "Item 6", "Item 7" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        listOptions.setLayoutOrientation(javax.swing.JList.HORIZONTAL_WRAP);
        listOptions.setVisibleRowCount(-1);
        jScrollPane1.setViewportView(listOptions);

        comboBoxOptionsChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxOptionsChooserActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        menuNewMap.setText("New Map");
        menuNewMap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuNewMapActionPerformed(evt);
            }
        });
        jMenu1.add(menuNewMap);

        menuOpen.setText("Open");
        menuOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuOpenActionPerformed(evt);
            }
        });
        jMenu1.add(menuOpen);

        menuSave.setText("Save");
        menuSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSaveActionPerformed(evt);
            }
        });
        jMenu1.add(menuSave);

        menuSaveAs.setText("Save As");
        menuSaveAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSaveAsActionPerformed(evt);
            }
        });
        jMenu1.add(menuSaveAs);
        jMenu1.add(jSeparator1);

        jMenuItem4.setText("Exit");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("View");

        jMenuItem1.setText("Load Options From File");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(comboBoxOptionsChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 349, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(buttonClear))
                    .addComponent(mapPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(levelTextPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(levelTextPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 421, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(mapPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(comboBoxOptionsChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttonClear)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	private void menuOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuOpenActionPerformed
			try {
				mapLoader.openFile();
			} catch (NotAMapFileException e) {
				JOptionPane.showMessageDialog(this, "File is not a map file");
			}
		
	}//GEN-LAST:event_menuOpenActionPerformed

	private void menuSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSaveActionPerformed
		map.saveFile();
	}//GEN-LAST:event_menuSaveActionPerformed

	private void menuSaveAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSaveAsActionPerformed
		map.saveFileAs();
	}//GEN-LAST:event_menuSaveAsActionPerformed

	private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
		System.exit(0);
	}//GEN-LAST:event_jMenuItem4ActionPerformed

	private void menuNewMapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuNewMapActionPerformed
		NewWindow n = new NewWindow(editor);
		n.setVisible(true);
	}//GEN-LAST:event_menuNewMapActionPerformed

	private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
		try {
			editor.setOptions(optionsLoader.open());
			initOptionsBox();
			updateCurrentValue();

		} catch (FileNotFoundException ex) {
			System.out.println("Fant ikke filen!");
		} catch (NullPointerException ex) {
			return;
		}
	}//GEN-LAST:event_jMenuItem1ActionPerformed

	private void comboBoxOptionsChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxOptionsChooserActionPerformed


		OptionsHolder holder = (OptionsHolder) comboBoxOptionsChooser.getSelectedItem();
		editor.setOptions(holder);
		initOptionsBox();
		updateCurrentValue();
	}//GEN-LAST:event_comboBoxOptionsChooserActionPerformed

	private void buttonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonClearActionPerformed
		map.clear();
	}//GEN-LAST:event_buttonClearActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonClear;
    private javax.swing.JComboBox comboBoxOptionsChooser;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private gui.LevelTextPanel levelTextPanel;
    private javax.swing.JList listOptions;
    private gui.MapPanel mapPanel;
    private javax.swing.JMenuItem menuNewMap;
    private javax.swing.JMenuItem menuOpen;
    private javax.swing.JMenuItem menuSave;
    private javax.swing.JMenuItem menuSaveAs;
    // End of variables declaration//GEN-END:variables
}
